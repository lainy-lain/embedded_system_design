###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       14/Sep/2021  17:08:17
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu9082\AppData\Local\Temp\EW6853.tmp
#        ("D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\user\main.c"
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\Debug\List"
#        -o "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\Debug\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I "D:\SynologyDrive\@@@
#        @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\libraries\CMSIS\DeviceSupport\"
#        -I "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\libraries\CMSIS\DeviceSupport\Startup\"
#        -I "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\"
#        -I "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\"
#        -I "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\user\"
#        -I "D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\user\inc\"
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\Debug\List\main.lst
#    Object file  =  
#        D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@
#        @@@@@@@@@@@@\@@@@@@\@@@\iar_test\Debug\Obj\main.o
#
###############################################################################


   \                                 In section .text, align 4, keep-with-next
D:\SynologyDrive\@@@ @@\2021 @@@@\2021 2@@ @@@@@@@@@@@@\@@@@@@\@@@\iar_test\user\main.c
      1          int main() {
      2            
      3            int on_flag = 0;
   \                     main: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
      4          
      5                  *((volatile unsigned *)(0x40021000 + 0x18)) |= 0x20 | 0x10;
   \   00000002   0x4846             LDR.N    R0,??main_0      ;; 0x40021018
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0030      ORRS     R0,R0,#0x30
   \   0000000A   0x4944             LDR.N    R1,??main_0      ;; 0x40021018
   \   0000000C   0x6008             STR      R0,[R1, #+0]
      6                  *((volatile unsigned *)(0x40011400 + 0x04)) &= ~0xf000;
   \   0000000E   0x4844             LDR.N    R0,??main_0+0x4  ;; 0x40011404
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF430 0x4070      BICS     R0,R0,#0xF000
   \   00000016   0x4942             LDR.N    R1,??main_0+0x4  ;; 0x40011404
   \   00000018   0x6008             STR      R0,[R1, #+0]
      7                  *((volatile unsigned *)(0x40011400 + 0x04)) |= 0x8000;
   \   0000001A   0x4841             LDR.N    R0,??main_0+0x4  ;; 0x40011404
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000022   0x493F             LDR.N    R1,??main_0+0x4  ;; 0x40011404
   \   00000024   0x6008             STR      R0,[R1, #+0]
      8          
      9          	*((volatile unsigned *)(0x40011400 + 0x00)) &= ~0xf00fff00;
   \   00000026   0x483F             LDR.N    R0,??main_0+0x8  ;; 0x40011400
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x483F             LDR.N    R0,??main_0+0xC  ;; 0xff000ff
   \   0000002C   0x4001             ANDS     R1,R0,R1
   \   0000002E   0x483D             LDR.N    R0,??main_0+0x8  ;; 0x40011400
   \   00000030   0x6001             STR      R1,[R0, #+0]
     10          	*((volatile unsigned *)(0x40011400 + 0x00)) |= 0x30033300;
   \   00000032   0x483C             LDR.N    R0,??main_0+0x8  ;; 0x40011400
   \   00000034   0x6801             LDR      R1,[R0, #+0]
   \   00000036   0x483D             LDR.N    R0,??main_0+0x10  ;; 0x30033300
   \   00000038   0x4301             ORRS     R1,R0,R1
   \   0000003A   0x483A             LDR.N    R0,??main_0+0x8  ;; 0x40011400
   \   0000003C   0x6001             STR      R1,[R0, #+0]
     11          
     12          	*((volatile unsigned *)(0x40011000 + 0x00)) &= ~0xffff00;
   \   0000003E   0x483C             LDR.N    R0,??main_0+0x14  ;; 0x40011000
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF36F 0x2017      BFC      R0,#+8,#+16
   \   00000046   0x493A             LDR.N    R1,??main_0+0x14  ;; 0x40011000
   \   00000048   0x6008             STR      R0,[R1, #+0]
     13          	*((volatile unsigned *)(0x40011000 + 0x00)) |= 0x888800;
   \   0000004A   0x4839             LDR.N    R0,??main_0+0x14  ;; 0x40011000
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF440 0x0008      ORR      R0,R0,#0x880000
   \   00000052   0xF450 0x4008      ORRS     R0,R0,#0x8800
   \   00000056   0x4936             LDR.N    R1,??main_0+0x14  ;; 0x40011000
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0xE005             B.N      ??main_1
     14          
     15          	while (1) {
     16                    if(!(*((volatile unsigned *)(0x40011400 + 0x08)) & (1 << 11)))
     17                    {
     18                      on_flag = 1;
     19                    }
     20                    else
     21                    {
     22                      on_flag = 0;
     23                    }
     24                    if(on_flag)
     25                    {
     26                      if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 2)))
     27                      {
     28                        *((volatile unsigned *)(0x40011400 + 0x10)) |= (1 << 2);
   \                     ??main_2: (+1)
   \   0000005C   0x4835             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000064   0x4933             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000066   0x6008             STR      R0,[R1, #+0]
     29                      }
   \                     ??main_1: (+1)
   \   00000068   0x4833             LDR.N    R0,??main_0+0x1C  ;; 0x40011408
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x0500             LSLS     R0,R0,#+20
   \   0000006E   0xD401             BMI.N    ??main_3
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0xE000             B.N      ??main_4
   \                     ??main_3: (+1)
   \   00000074   0x2000             MOVS     R0,#+0
   \                     ??main_4: (+1)
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD024             BEQ.N    ??main_5
   \   0000007A   0x4830             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x0740             LSLS     R0,R0,#+29
   \   00000080   0xD5EC             BPL.N    ??main_2
     30                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 3)))
   \   00000082   0x482E             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x0700             LSLS     R0,R0,#+28
   \   00000088   0xD406             BMI.N    ??main_6
     31                      {
     32                        *((volatile unsigned *)(0x40011400 + 0x10)) |= (1 << 3);
   \   0000008A   0x482A             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000092   0x4928             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000094   0x6008             STR      R0,[R1, #+0]
   \   00000096   0xE7E7             B.N      ??main_1
     33                      }
     34                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 4)))
   \                     ??main_6: (+1)
   \   00000098   0x4828             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x06C0             LSLS     R0,R0,#+27
   \   0000009E   0xD406             BMI.N    ??main_7
     35                      {
     36                        *((volatile unsigned *)(0x40011400 + 0x10)) |= (1 << 4);
   \   000000A0   0x4824             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000A8   0x4922             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000AA   0x6008             STR      R0,[R1, #+0]
   \   000000AC   0xE7DC             B.N      ??main_1
     37                      }
     38                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 5)))
   \                     ??main_7: (+1)
   \   000000AE   0x4823             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x0680             LSLS     R0,R0,#+26
   \   000000B4   0xD4D8             BMI.N    ??main_1
     39                      {
     40                        *((volatile unsigned *)(0x40011400 + 0x10)) |= (1 << 7);
   \   000000B6   0x481F             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000000BE   0x491D             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000C0   0x6008             STR      R0,[R1, #+0]
   \   000000C2   0xE7D1             B.N      ??main_1
     41                      }
     42                    }
     43                    else
     44                    {
     45                      if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 2)))
   \                     ??main_5: (+1)
   \   000000C4   0x481D             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x0740             LSLS     R0,R0,#+29
   \   000000CA   0xD406             BMI.N    ??main_8
     46                      {
     47                        *((volatile unsigned *)(0x40011400 + 0x10)) |= ((1 << 16) << 2);
   \   000000CC   0x4819             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   000000D4   0x4917             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000D6   0x6008             STR      R0,[R1, #+0]
   \   000000D8   0xE7C6             B.N      ??main_1
     48                      }
     49                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 3)))
   \                     ??main_8: (+1)
   \   000000DA   0x4818             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x0700             LSLS     R0,R0,#+28
   \   000000E0   0xD406             BMI.N    ??main_9
     50                      {
     51                        *((volatile unsigned *)(0x40011400 + 0x10)) |= ((1 << 16) << 3);
   \   000000E2   0x4814             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   000000EA   0x4912             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000EC   0x6008             STR      R0,[R1, #+0]
   \   000000EE   0xE7BB             B.N      ??main_1
     52                      }
     53                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 4)))
   \                     ??main_9: (+1)
   \   000000F0   0x4812             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x06C0             LSLS     R0,R0,#+27
   \   000000F6   0xD406             BMI.N    ??main_10
     54                      {
     55                        *((volatile unsigned *)(0x40011400 + 0x10)) |= ((1 << 16) << 4);
   \   000000F8   0x480E             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0xF450 0x1080      ORRS     R0,R0,#0x100000
   \   00000100   0x490C             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000102   0x6008             STR      R0,[R1, #+0]
   \   00000104   0xE7B0             B.N      ??main_1
     56                      }
     57                      else if(!(*((volatile unsigned *)(0x40011000 + 0x08)) & (1 << 5)))
   \                     ??main_10: (+1)
   \   00000106   0x480D             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x0680             LSLS     R0,R0,#+26
   \   0000010C   0xD4AC             BMI.N    ??main_1
     58                      {
     59                        *((volatile unsigned *)(0x40011400 + 0x10)) |= ((1 << 16) << 7);
   \   0000010E   0x4809             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000116   0x4907             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000118   0x6008             STR      R0,[R1, #+0]
   \   0000011A   0xE7A5             B.N      ??main_1
   \                     ??main_0:
   \   0000011C   0x40021018         DC32     0x40021018
   \   00000120   0x40011404         DC32     0x40011404
   \   00000124   0x40011400         DC32     0x40011400
   \   00000128   0x0FF000FF         DC32     0xff000ff
   \   0000012C   0x30033300         DC32     0x30033300
   \   00000130   0x40011000         DC32     0x40011000
   \   00000134   0x40011410         DC32     0x40011410
   \   00000138   0x40011408         DC32     0x40011408
   \   0000013C   0x40011008         DC32     0x40011008
     60                      }
     61                    }
     62          	}
     63          }
     64          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   main


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     320  main

 
 320 bytes in section .text
 
 320 bytes of CODE memory

Errors: none
Warnings: none
